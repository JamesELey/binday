name: 🚀 Deploy to Fasthost (Slim - No Vendor)

on:
  workflow_dispatch: # Manual triggering only for production deployments

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📝 Create production environment file
      run: |
        cp production.env.example .env
        echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        
    - name: 🗂️ Create root index file
      run: |
        echo '<?php' > root-index.php
        echo '// Front controller for shared hosting: route to subdirectory public index' >> root-index.php
        echo 'require __DIR__."/binday/public/index.php";' >> root-index.php
        
    - name: 📝 Create remote composer install script
      run: |
        cat > remote-setup.php << 'EOF'
        <?php
        // Remote setup script for server-side dependency installation
        error_reporting(E_ALL);
        ini_set('display_errors', 1);
        
        // Simple token verification
        $expected_token = '${{ secrets.DEPLOY_TOKEN }}';
        $provided_token = $_GET['token'] ?? '';
        
        if ($provided_token !== $expected_token) {
            http_response_code(403);
            die('Invalid token');
        }
        
        echo "🚀 Starting remote setup...\n";
        
        // Change to the binday directory
        chdir('/home/sites/thebinday.co.uk/public_html/binday');
        
        // Install composer dependencies
        echo "📦 Installing Composer dependencies...\n";
        $output = shell_exec('composer install --no-dev --optimize-autoloader 2>&1');
        echo $output . "\n";
        
        // Set up Laravel
        echo "🔧 Setting up Laravel...\n";
        
        // Clear caches
        shell_exec('php artisan config:clear 2>&1');
        shell_exec('php artisan route:clear 2>&1');
        shell_exec('php artisan view:clear 2>&1');
        shell_exec('php artisan cache:clear 2>&1');
        
        // Optimize for production
        shell_exec('php artisan config:cache 2>&1');
        shell_exec('php artisan route:cache 2>&1');
        shell_exec('php artisan view:cache 2>&1');
        
        // Set permissions
        chmod('storage', 0755);
        chmod('bootstrap/cache', 0755);
        shell_exec('chmod -R 755 storage bootstrap/cache 2>&1');
        
        echo "✅ Remote setup completed!\n";
        
        // Remove this script for security
        unlink(__FILE__);
        echo "🔒 Setup script removed\n";
        ?>
        EOF
        
    - name: 📤 Deploy Laravel app (without vendor)
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.fasthosts.co.uk
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 21
        protocol: ftps
        local-dir: ./
        server-dir: /htdocs/binday/
        exclude: |
          **/.git*
          **/.git*/**
          **/vendor/**
          **/node_modules/**
          **/tests/**
          **/.github/**
          **/storage/framework/cache/data/**
          **/storage/logs/*.log
          deploy_ftp.ps1
          DEPLOYMENT_GUIDE.md
          DEVELOPMENT_NOTES.md
          production.env.example
          create-deployment-package.ps1
          root-index.php
          .env
        timeout: 180000
        
    - name: 📤 Upload environment file separately
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.fasthosts.co.uk
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 21
        protocol: ftps
        local-dir: ./
        server-dir: /htdocs/binday/
        include: |
          .env
          remote-setup.php
        exclude: |
          **/*
        timeout: 30000
        
    - name: 📋 Upload root index as /htdocs/index.php
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.fasthosts.co.uk
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 21
        protocol: ftps
        local-dir: ./
        server-dir: /htdocs/
        include: root-index.php
        exclude: |
          **/*
        timeout: 30000
        
    - name: 🔧 Run remote setup (install dependencies)
      run: |
        echo "🔧 Running server-side setup..."
        
        # Run the remote setup script
        response=$(curl -f -s "https://thebinday.co.uk/binday/remote-setup.php?token=${{ secrets.DEPLOY_TOKEN }}" || echo "FAILED")
        
        if [[ "$response" == "FAILED" ]]; then
          echo "❌ Remote setup failed. Manual setup required."
          echo ""
          echo "Manual setup steps:"
          echo "1. SSH into your Fasthost server"
          echo "2. cd /home/sites/thebinday.co.uk/public_html/binday"
          echo "3. composer install --no-dev --optimize-autoloader"
          echo "4. php artisan config:cache"
          echo "5. php artisan route:cache"
          echo "6. php artisan view:cache"
          echo "7. chmod -R 755 storage bootstrap/cache"
        else
          echo "✅ Remote setup completed:"
          echo "$response"
        fi
        
    - name: 🔍 Post-deployment verification
      run: |
        echo "🔍 Testing deployment..."
        sleep 15  # Wait for setup to complete
        
        # Test if the main site loads
        if curl -f -s "https://thebinday.co.uk" > /dev/null; then
          echo "✅ Main site accessible"
        else
          echo "❌ Main site not accessible - may need time to propagate"
        fi
        
        echo ""
        echo "🔗 Verification URLs:"
        echo "1. Main site: https://thebinday.co.uk"
        echo "2. Map view: https://thebinday.co.uk/bins/map"
        echo "3. Collections: https://thebinday.co.uk/collections"
        echo "4. Areas: https://thebinday.co.uk/areas"
        echo "5. Admin seed: https://thebinday.co.uk/admin/seed"
        
    - name: ✅ Deployment complete
      run: |
        echo "🎉 Slim deployment completed!"
        echo "🌐 Your application should be available at: https://thebinday.co.uk"
        echo ""
        echo "📊 Deployment method: Direct upload without vendor + remote composer install"
        echo "🚀 Benefits: Faster upload, server-side dependency management"
        echo ""
        echo "🔍 If the site isn't working:"
        echo "1. Check if composer install completed successfully"
        echo "2. Verify file permissions are set correctly"
        echo "3. Check Laravel caches are built properly"
